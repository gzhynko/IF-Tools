<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>IF-Tools</title>
    <base href="/"/>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css"/>
    <link href="css/site.css" rel="stylesheet"/>
    <link href="css/tools-shared.css" rel="stylesheet"/>
    <link href="IF-Tools.styles.css" rel="stylesheet"/>
    <link href="https://fonts.cdnfonts.com/css/roboto" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://at.alicdn.com/t/font_o5hd5vvqpoqiwwmi.css">
    <HeadOutlet />
</head>

<body>
    <div id="components-reconnect-modal" class="reconnect-modal hide">
        <div class="reconnect-modal-dialog">
            <div class="modal-body">
                <div class="state state-reconnecting hide">
                    <p>
                        Reconnecting to server...
                    </p>
                    <button class="btn btn-primary" onclick="location.reload()">Reload page</button>
                </div>
                <div class="state state-lost hide">
                    <p>
                        Lost connection to server.
                    </p>
                    <button class="btn btn-primary" onclick="location.reload()">Reload</button>
                </div>
                <div class="state state-refused hide">
                    <p>
                        Connection refused.
                    </p>
                    <button class="btn btn-primary" onclick="location.reload()">Reload</button>
                </div>
            </div>
        </div>
    </div>

    <Routes @rendermode="InteractiveServer" />

    <script src="_framework/blazor.web.js" autostart="false"></script>
    <script src="js/navMenu.js"></script>

    <script>
        let reconnectModal = document.querySelector(".reconnect-modal");
        let stateReconnecting = document.querySelector(".state-reconnecting");
        let stateLost = document.querySelector(".state-lost");
        let stateRefused = document.querySelector(".state-refused");

        // custom onConnectionDown handler
        async function connectionDown(options) {
            reconnectModal.classList.remove("hide");
            hideAllStates();
            stateReconnecting.classList.remove("hide");
            
            for (let i = 0; i < options.maxRetries; i++) {
                await this.delay(options.retryIntervalMilliseconds);
                
                if (this.isDisposed) {
                    break;
                }

                try {
                    const result = await window.Blazor.reconnect();
                    
                    if (!result) {
                        console.error("(reconnect attempt #" + i + ") Server refused.");
                    } else {
                        hideAllStates();
                        reconnectModal.classList.add("hide");

                        return;
                    }
                } catch { }
            }
            
            hideAllStates();
            stateLost.classList.remove("hide");
        }

        function delay(durationMilliseconds) {
            return new Promise(resolve => setTimeout(resolve, durationMilliseconds));
        }
        
        function hideAllStates() {
            stateLost.classList.add("hide");
            stateReconnecting.classList.add("hide");
            stateRefused.classList.add("hide");
        }

        // custom onConnectionUp handler
        function connectionUp(e) {
            hideAllStates();
            reconnectModal.classList.add("hide");
        }

        window.Blazor.start({
            reconnectionOptions: {
                maxRetries: 30,
                retryIntervalMilliseconds: 500,
            },
            reconnectionHandler: {
                onConnectionDown: e => connectionDown(e),
                onConnectionUp: e => connectionUp(e)
            }
        });
    </script>
</body>

</html>
